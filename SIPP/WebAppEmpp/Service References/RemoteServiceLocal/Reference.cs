//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppEmpp.RemoteServiceLocal {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteServiceLocal.IServiceLocal")]
    public interface IServiceLocal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/encodePass", ReplyAction="http://tempuri.org/IServiceLocal/encodePassResponse")]
        string encodePass(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/encodePass", ReplyAction="http://tempuri.org/IServiceLocal/encodePassResponse")]
        System.Threading.Tasks.Task<string> encodePassAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/registroEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/registroEmpresaResponse")]
        bool registroEmpresa(Entities.DTOs.DTOEmpresa enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/registroEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/registroEmpresaResponse")]
        System.Threading.Tasks.Task<bool> registroEmpresaAsync(Entities.DTOs.DTOEmpresa enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/modificarEmpresaResponse")]
        bool modificarEmpresa(Entities.DTOs.DTOEmpresa enterprise, long rutEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/modificarEmpresaResponse")]
        System.Threading.Tasks.Task<bool> modificarEmpresaAsync(Entities.DTOs.DTOEmpresa enterprise, long rutEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/loginEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/loginEmpresaResponse")]
        Entities.DTOs.DTOEmpresa loginEmpresa(string nombreEmpresa, string passEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/loginEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/loginEmpresaResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEmpresa> loginEmpresaAsync(string nombreEmpresa, string passEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/borrarEmpresaResponse")]
        bool borrarEmpresa(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/borrarEmpresaResponse")]
        System.Threading.Tasks.Task<bool> borrarEmpresaAsync(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarRut", ReplyAction="http://tempuri.org/IServiceLocal/comprobarRutResponse")]
        bool comprobarRut(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarRut", ReplyAction="http://tempuri.org/IServiceLocal/comprobarRutResponse")]
        System.Threading.Tasks.Task<bool> comprobarRutAsync(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarRazonLogin", ReplyAction="http://tempuri.org/IServiceLocal/comprobarRazonLoginResponse")]
        bool comprobarRazonLogin(string razonSocial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarRazonLogin", ReplyAction="http://tempuri.org/IServiceLocal/comprobarRazonLoginResponse")]
        System.Threading.Tasks.Task<bool> comprobarRazonLoginAsync(string razonSocial);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarArticulo", ReplyAction="http://tempuri.org/IServiceLocal/agregarArticuloResponse")]
        bool agregarArticulo(Entities.DTOs.DTOArticulo item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarArticulo", ReplyAction="http://tempuri.org/IServiceLocal/agregarArticuloResponse")]
        System.Threading.Tasks.Task<bool> agregarArticuloAsync(Entities.DTOs.DTOArticulo item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarArticulo", ReplyAction="http://tempuri.org/IServiceLocal/borrarArticuloResponse")]
        bool borrarArticulo(Entities.DTOs.DTOArticulo item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarArticulo", ReplyAction="http://tempuri.org/IServiceLocal/borrarArticuloResponse")]
        System.Threading.Tasks.Task<bool> borrarArticuloAsync(Entities.DTOs.DTOArticulo item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulos", ReplyAction="http://tempuri.org/IServiceLocal/getArticulosResponse")]
        Entities.DTOs.DTOArticulo[] getArticulos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulos", ReplyAction="http://tempuri.org/IServiceLocal/getArticulosResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOArticulo[]> getArticulosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulo", ReplyAction="http://tempuri.org/IServiceLocal/getArticuloResponse")]
        Entities.DTOs.DTOArticulo getArticulo(string nombreArticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulo", ReplyAction="http://tempuri.org/IServiceLocal/getArticuloResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOArticulo> getArticuloAsync(string nombreArticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/altaArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/altaArticuloLocalResponse")]
        bool altaArticuloLocal(Entities.Articulo articulo, Entities.Local local, decimal nuevocosto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/altaArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/altaArticuloLocalResponse")]
        System.Threading.Tasks.Task<bool> altaArticuloLocalAsync(Entities.Articulo articulo, Entities.Local local, decimal nuevocosto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/bajaArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/bajaArticuloLocalResponse")]
        bool bajaArticuloLocal(string articulo, string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/bajaArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/bajaArticuloLocalResponse")]
        System.Threading.Tasks.Task<bool> bajaArticuloLocalAsync(string articulo, string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarArticuloLocalResponse")]
        bool modificarArticuloLocal(string articulo, string local, decimal nuevocosto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarArticuloLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarArticuloLocalResponse")]
        System.Threading.Tasks.Task<bool> modificarArticuloLocalAsync(string articulo, string local, decimal nuevocosto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticuloByLocal", ReplyAction="http://tempuri.org/IServiceLocal/getArticuloByLocalResponse")]
        Entities.DTOs.DTOArticuloLocal getArticuloByLocal(string nombreArticulo, string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticuloByLocal", ReplyAction="http://tempuri.org/IServiceLocal/getArticuloByLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOArticuloLocal> getArticuloByLocalAsync(string nombreArticulo, string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulosLocal", ReplyAction="http://tempuri.org/IServiceLocal/getArticulosLocalResponse")]
        Entities.DTOs.DTOArticuloLocal[] getArticulosLocal(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getArticulosLocal", ReplyAction="http://tempuri.org/IServiceLocal/getArticulosLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOArticuloLocal[]> getArticulosLocalAsync(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/registroLocal", ReplyAction="http://tempuri.org/IServiceLocal/registroLocalResponse")]
        bool registroLocal(Entities.DTOs.DTOLocal sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/registroLocal", ReplyAction="http://tempuri.org/IServiceLocal/registroLocalResponse")]
        System.Threading.Tasks.Task<bool> registroLocalAsync(Entities.DTOs.DTOLocal sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarLocalResponse")]
        bool modificarLocal(Entities.DTOs.DTOLocal sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarLocalResponse")]
        System.Threading.Tasks.Task<bool> modificarLocalAsync(Entities.DTOs.DTOLocal sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocal", ReplyAction="http://tempuri.org/IServiceLocal/getLocalResponse")]
        Entities.DTOs.DTOLocal getLocal(string nombreLocal, long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocal", ReplyAction="http://tempuri.org/IServiceLocal/getLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal> getLocalAsync(string nombreLocal, long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarLocal", ReplyAction="http://tempuri.org/IServiceLocal/borrarLocalResponse")]
        bool borrarLocal(string nombreLocal, long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarLocal", ReplyAction="http://tempuri.org/IServiceLocal/borrarLocalResponse")]
        System.Threading.Tasks.Task<bool> borrarLocalAsync(string nombreLocal, long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorArea", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorAreaResponse")]
        Entities.DTOs.DTOLocal[] getLocalesPorArea(string latitudCliente, string longitudCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorArea", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorAreaResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorAreaAsync(string latitudCliente, string longitudCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorLocalidad", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorLocalidadResponse")]
        Entities.DTOs.DTOLocal[] getLocalesPorLocalidad(string lugar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorLocalidad", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorLocalidadResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorLocalidadAsync(string lugar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalidades", ReplyAction="http://tempuri.org/IServiceLocal/getLocalidadesResponse")]
        string[] getLocalidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalidades", ReplyAction="http://tempuri.org/IServiceLocal/getLocalidadesResponse")]
        System.Threading.Tasks.Task<string[]> getLocalidadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorEmpresaResponse")]
        Entities.DTOs.DTOLocal[] getLocalesPorEmpresa(long idempresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesPorEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesPorEmpresaResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorEmpresaAsync(long idempresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesXEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesXEmpresaResponse")]
        Entities.DTOs.DTOLocal[] getLocalesXEmpresa(long empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getLocalesXEmpresa", ReplyAction="http://tempuri.org/IServiceLocal/getLocalesXEmpresaResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesXEmpresaAsync(long empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarPassLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarPassLocalResponse")]
        bool modificarPassLocal(long rut, string nombre, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarPassLocal", ReplyAction="http://tempuri.org/IServiceLocal/modificarPassLocalResponse")]
        System.Threading.Tasks.Task<bool> modificarPassLocalAsync(long rut, string nombre, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/loginLocal", ReplyAction="http://tempuri.org/IServiceLocal/loginLocalResponse")]
        Entities.DTOs.DTOLocal loginLocal(string nombreLocal, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/loginLocal", ReplyAction="http://tempuri.org/IServiceLocal/loginLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOLocal> loginLocalAsync(string nombreLocal, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEspecificaciones", ReplyAction="http://tempuri.org/IServiceLocal/getEspecificacionesResponse")]
        Entities.DTOs.DTOEspecificacion[] getEspecificaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEspecificaciones", ReplyAction="http://tempuri.org/IServiceLocal/getEspecificacionesResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEspecificacion[]> getEspecificacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEspecificacionesLocal", ReplyAction="http://tempuri.org/IServiceLocal/getEspecificacionesLocalResponse")]
        Entities.DTOs.DTOEspecificacionLocal[] getEspecificacionesLocal(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEspecificacionesLocal", ReplyAction="http://tempuri.org/IServiceLocal/getEspecificacionesLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEspecificacionLocal[]> getEspecificacionesLocalAsync(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarGusto", ReplyAction="http://tempuri.org/IServiceLocal/agregarGustoResponse")]
        bool agregarGusto(string espesificacion, string local, int costo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarGusto", ReplyAction="http://tempuri.org/IServiceLocal/agregarGustoResponse")]
        System.Threading.Tasks.Task<bool> agregarGustoAsync(string espesificacion, string local, int costo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarGusto", ReplyAction="http://tempuri.org/IServiceLocal/modificarGustoResponse")]
        bool modificarGusto(string espesificacion, string local, int costo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarGusto", ReplyAction="http://tempuri.org/IServiceLocal/modificarGustoResponse")]
        System.Threading.Tasks.Task<bool> modificarGustoAsync(string espesificacion, string local, int costo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarGusto", ReplyAction="http://tempuri.org/IServiceLocal/borrarGustoResponse")]
        bool borrarGusto(string espesificacion, string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/borrarGusto", ReplyAction="http://tempuri.org/IServiceLocal/borrarGustoResponse")]
        System.Threading.Tasks.Task<bool> borrarGustoAsync(string espesificacion, string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getPedidos", ReplyAction="http://tempuri.org/IServiceLocal/getPedidosResponse")]
        Entities.DTOs.DTOPedido[] getPedidos(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getPedidos", ReplyAction="http://tempuri.org/IServiceLocal/getPedidosResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOPedido[]> getPedidosAsync(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getPedido", ReplyAction="http://tempuri.org/IServiceLocal/getPedidoResponse")]
        Entities.DTOs.DTOPedido getPedido(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getPedido", ReplyAction="http://tempuri.org/IServiceLocal/getPedidoResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOPedido> getPedidoAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/guardarPedido", ReplyAction="http://tempuri.org/IServiceLocal/guardarPedidoResponse")]
        bool guardarPedido(Entities.DTOs.DTOPedido ped);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/guardarPedido", ReplyAction="http://tempuri.org/IServiceLocal/guardarPedidoResponse")]
        System.Threading.Tasks.Task<bool> guardarPedidoAsync(Entities.DTOs.DTOPedido ped);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarNombreLocalLogin", ReplyAction="http://tempuri.org/IServiceLocal/comprobarNombreLocalLoginResponse")]
        bool comprobarNombreLocalLogin(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/comprobarNombreLocalLogin", ReplyAction="http://tempuri.org/IServiceLocal/comprobarNombreLocalLoginResponse")]
        System.Threading.Tasks.Task<bool> comprobarNombreLocalLoginAsync(string nombreLocal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarEstado", ReplyAction="http://tempuri.org/IServiceLocal/agregarEstadoResponse")]
        bool agregarEstado(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/agregarEstado", ReplyAction="http://tempuri.org/IServiceLocal/agregarEstadoResponse")]
        System.Threading.Tasks.Task<bool> agregarEstadoAsync(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarEstado", ReplyAction="http://tempuri.org/IServiceLocal/modificarEstadoResponse")]
        bool modificarEstado(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/modificarEstado", ReplyAction="http://tempuri.org/IServiceLocal/modificarEstadoResponse")]
        System.Threading.Tasks.Task<bool> modificarEstadoAsync(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/elimarEstado", ReplyAction="http://tempuri.org/IServiceLocal/elimarEstadoResponse")]
        bool elimarEstado(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/elimarEstado", ReplyAction="http://tempuri.org/IServiceLocal/elimarEstadoResponse")]
        System.Threading.Tasks.Task<bool> elimarEstadoAsync(Entities.DTOs.DTOEstado state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEstado", ReplyAction="http://tempuri.org/IServiceLocal/getEstadoResponse")]
        Entities.DTOs.DTOEstado getEstado(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEstado", ReplyAction="http://tempuri.org/IServiceLocal/getEstadoResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEstado> getEstadoAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEstadoPorPedido", ReplyAction="http://tempuri.org/IServiceLocal/getEstadoPorPedidoResponse")]
        Entities.DTOs.DTOEstado getEstadoPorPedido(long idPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceLocal/getEstadoPorPedido", ReplyAction="http://tempuri.org/IServiceLocal/getEstadoPorPedidoResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEstado> getEstadoPorPedidoAsync(long idPedido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceLocalChannel : WebAppEmpp.RemoteServiceLocal.IServiceLocal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceLocalClient : System.ServiceModel.ClientBase<WebAppEmpp.RemoteServiceLocal.IServiceLocal>, WebAppEmpp.RemoteServiceLocal.IServiceLocal {
        
        public ServiceLocalClient() {
        }
        
        public ServiceLocalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceLocalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLocalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceLocalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string encodePass(string pass) {
            return base.Channel.encodePass(pass);
        }
        
        public System.Threading.Tasks.Task<string> encodePassAsync(string pass) {
            return base.Channel.encodePassAsync(pass);
        }
        
        public bool registroEmpresa(Entities.DTOs.DTOEmpresa enterprise) {
            return base.Channel.registroEmpresa(enterprise);
        }
        
        public System.Threading.Tasks.Task<bool> registroEmpresaAsync(Entities.DTOs.DTOEmpresa enterprise) {
            return base.Channel.registroEmpresaAsync(enterprise);
        }
        
        public bool modificarEmpresa(Entities.DTOs.DTOEmpresa enterprise, long rutEmpresa) {
            return base.Channel.modificarEmpresa(enterprise, rutEmpresa);
        }
        
        public System.Threading.Tasks.Task<bool> modificarEmpresaAsync(Entities.DTOs.DTOEmpresa enterprise, long rutEmpresa) {
            return base.Channel.modificarEmpresaAsync(enterprise, rutEmpresa);
        }
        
        public Entities.DTOs.DTOEmpresa loginEmpresa(string nombreEmpresa, string passEmpresa) {
            return base.Channel.loginEmpresa(nombreEmpresa, passEmpresa);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEmpresa> loginEmpresaAsync(string nombreEmpresa, string passEmpresa) {
            return base.Channel.loginEmpresaAsync(nombreEmpresa, passEmpresa);
        }
        
        public bool borrarEmpresa(long rut) {
            return base.Channel.borrarEmpresa(rut);
        }
        
        public System.Threading.Tasks.Task<bool> borrarEmpresaAsync(long rut) {
            return base.Channel.borrarEmpresaAsync(rut);
        }
        
        public bool comprobarRut(long rut) {
            return base.Channel.comprobarRut(rut);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarRutAsync(long rut) {
            return base.Channel.comprobarRutAsync(rut);
        }
        
        public bool comprobarRazonLogin(string razonSocial) {
            return base.Channel.comprobarRazonLogin(razonSocial);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarRazonLoginAsync(string razonSocial) {
            return base.Channel.comprobarRazonLoginAsync(razonSocial);
        }
        
        public bool agregarArticulo(Entities.DTOs.DTOArticulo item) {
            return base.Channel.agregarArticulo(item);
        }
        
        public System.Threading.Tasks.Task<bool> agregarArticuloAsync(Entities.DTOs.DTOArticulo item) {
            return base.Channel.agregarArticuloAsync(item);
        }
        
        public bool borrarArticulo(Entities.DTOs.DTOArticulo item) {
            return base.Channel.borrarArticulo(item);
        }
        
        public System.Threading.Tasks.Task<bool> borrarArticuloAsync(Entities.DTOs.DTOArticulo item) {
            return base.Channel.borrarArticuloAsync(item);
        }
        
        public Entities.DTOs.DTOArticulo[] getArticulos() {
            return base.Channel.getArticulos();
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOArticulo[]> getArticulosAsync() {
            return base.Channel.getArticulosAsync();
        }
        
        public Entities.DTOs.DTOArticulo getArticulo(string nombreArticulo) {
            return base.Channel.getArticulo(nombreArticulo);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOArticulo> getArticuloAsync(string nombreArticulo) {
            return base.Channel.getArticuloAsync(nombreArticulo);
        }
        
        public bool altaArticuloLocal(Entities.Articulo articulo, Entities.Local local, decimal nuevocosto) {
            return base.Channel.altaArticuloLocal(articulo, local, nuevocosto);
        }
        
        public System.Threading.Tasks.Task<bool> altaArticuloLocalAsync(Entities.Articulo articulo, Entities.Local local, decimal nuevocosto) {
            return base.Channel.altaArticuloLocalAsync(articulo, local, nuevocosto);
        }
        
        public bool bajaArticuloLocal(string articulo, string local) {
            return base.Channel.bajaArticuloLocal(articulo, local);
        }
        
        public System.Threading.Tasks.Task<bool> bajaArticuloLocalAsync(string articulo, string local) {
            return base.Channel.bajaArticuloLocalAsync(articulo, local);
        }
        
        public bool modificarArticuloLocal(string articulo, string local, decimal nuevocosto) {
            return base.Channel.modificarArticuloLocal(articulo, local, nuevocosto);
        }
        
        public System.Threading.Tasks.Task<bool> modificarArticuloLocalAsync(string articulo, string local, decimal nuevocosto) {
            return base.Channel.modificarArticuloLocalAsync(articulo, local, nuevocosto);
        }
        
        public Entities.DTOs.DTOArticuloLocal getArticuloByLocal(string nombreArticulo, string nombreLocal) {
            return base.Channel.getArticuloByLocal(nombreArticulo, nombreLocal);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOArticuloLocal> getArticuloByLocalAsync(string nombreArticulo, string nombreLocal) {
            return base.Channel.getArticuloByLocalAsync(nombreArticulo, nombreLocal);
        }
        
        public Entities.DTOs.DTOArticuloLocal[] getArticulosLocal(string nombreLocal) {
            return base.Channel.getArticulosLocal(nombreLocal);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOArticuloLocal[]> getArticulosLocalAsync(string nombreLocal) {
            return base.Channel.getArticulosLocalAsync(nombreLocal);
        }
        
        public bool registroLocal(Entities.DTOs.DTOLocal sucursal) {
            return base.Channel.registroLocal(sucursal);
        }
        
        public System.Threading.Tasks.Task<bool> registroLocalAsync(Entities.DTOs.DTOLocal sucursal) {
            return base.Channel.registroLocalAsync(sucursal);
        }
        
        public bool modificarLocal(Entities.DTOs.DTOLocal sucursal) {
            return base.Channel.modificarLocal(sucursal);
        }
        
        public System.Threading.Tasks.Task<bool> modificarLocalAsync(Entities.DTOs.DTOLocal sucursal) {
            return base.Channel.modificarLocalAsync(sucursal);
        }
        
        public Entities.DTOs.DTOLocal getLocal(string nombreLocal, long rut) {
            return base.Channel.getLocal(nombreLocal, rut);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal> getLocalAsync(string nombreLocal, long rut) {
            return base.Channel.getLocalAsync(nombreLocal, rut);
        }
        
        public bool borrarLocal(string nombreLocal, long rut) {
            return base.Channel.borrarLocal(nombreLocal, rut);
        }
        
        public System.Threading.Tasks.Task<bool> borrarLocalAsync(string nombreLocal, long rut) {
            return base.Channel.borrarLocalAsync(nombreLocal, rut);
        }
        
        public Entities.DTOs.DTOLocal[] getLocalesPorArea(string latitudCliente, string longitudCliente) {
            return base.Channel.getLocalesPorArea(latitudCliente, longitudCliente);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorAreaAsync(string latitudCliente, string longitudCliente) {
            return base.Channel.getLocalesPorAreaAsync(latitudCliente, longitudCliente);
        }
        
        public Entities.DTOs.DTOLocal[] getLocalesPorLocalidad(string lugar) {
            return base.Channel.getLocalesPorLocalidad(lugar);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorLocalidadAsync(string lugar) {
            return base.Channel.getLocalesPorLocalidadAsync(lugar);
        }
        
        public string[] getLocalidades() {
            return base.Channel.getLocalidades();
        }
        
        public System.Threading.Tasks.Task<string[]> getLocalidadesAsync() {
            return base.Channel.getLocalidadesAsync();
        }
        
        public Entities.DTOs.DTOLocal[] getLocalesPorEmpresa(long idempresa) {
            return base.Channel.getLocalesPorEmpresa(idempresa);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesPorEmpresaAsync(long idempresa) {
            return base.Channel.getLocalesPorEmpresaAsync(idempresa);
        }
        
        public Entities.DTOs.DTOLocal[] getLocalesXEmpresa(long empresa) {
            return base.Channel.getLocalesXEmpresa(empresa);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal[]> getLocalesXEmpresaAsync(long empresa) {
            return base.Channel.getLocalesXEmpresaAsync(empresa);
        }
        
        public bool modificarPassLocal(long rut, string nombre, string pass) {
            return base.Channel.modificarPassLocal(rut, nombre, pass);
        }
        
        public System.Threading.Tasks.Task<bool> modificarPassLocalAsync(long rut, string nombre, string pass) {
            return base.Channel.modificarPassLocalAsync(rut, nombre, pass);
        }
        
        public Entities.DTOs.DTOLocal loginLocal(string nombreLocal, string pass) {
            return base.Channel.loginLocal(nombreLocal, pass);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOLocal> loginLocalAsync(string nombreLocal, string pass) {
            return base.Channel.loginLocalAsync(nombreLocal, pass);
        }
        
        public Entities.DTOs.DTOEspecificacion[] getEspecificaciones() {
            return base.Channel.getEspecificaciones();
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEspecificacion[]> getEspecificacionesAsync() {
            return base.Channel.getEspecificacionesAsync();
        }
        
        public Entities.DTOs.DTOEspecificacionLocal[] getEspecificacionesLocal(string nombreLocal) {
            return base.Channel.getEspecificacionesLocal(nombreLocal);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEspecificacionLocal[]> getEspecificacionesLocalAsync(string nombreLocal) {
            return base.Channel.getEspecificacionesLocalAsync(nombreLocal);
        }
        
        public bool agregarGusto(string espesificacion, string local, int costo) {
            return base.Channel.agregarGusto(espesificacion, local, costo);
        }
        
        public System.Threading.Tasks.Task<bool> agregarGustoAsync(string espesificacion, string local, int costo) {
            return base.Channel.agregarGustoAsync(espesificacion, local, costo);
        }
        
        public bool modificarGusto(string espesificacion, string local, int costo) {
            return base.Channel.modificarGusto(espesificacion, local, costo);
        }
        
        public System.Threading.Tasks.Task<bool> modificarGustoAsync(string espesificacion, string local, int costo) {
            return base.Channel.modificarGustoAsync(espesificacion, local, costo);
        }
        
        public bool borrarGusto(string espesificacion, string local) {
            return base.Channel.borrarGusto(espesificacion, local);
        }
        
        public System.Threading.Tasks.Task<bool> borrarGustoAsync(string espesificacion, string local) {
            return base.Channel.borrarGustoAsync(espesificacion, local);
        }
        
        public Entities.DTOs.DTOPedido[] getPedidos(string nombreLocal) {
            return base.Channel.getPedidos(nombreLocal);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOPedido[]> getPedidosAsync(string nombreLocal) {
            return base.Channel.getPedidosAsync(nombreLocal);
        }
        
        public Entities.DTOs.DTOPedido getPedido(long id) {
            return base.Channel.getPedido(id);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOPedido> getPedidoAsync(long id) {
            return base.Channel.getPedidoAsync(id);
        }
        
        public bool guardarPedido(Entities.DTOs.DTOPedido ped) {
            return base.Channel.guardarPedido(ped);
        }
        
        public System.Threading.Tasks.Task<bool> guardarPedidoAsync(Entities.DTOs.DTOPedido ped) {
            return base.Channel.guardarPedidoAsync(ped);
        }
        
        public bool comprobarNombreLocalLogin(string nombreLocal) {
            return base.Channel.comprobarNombreLocalLogin(nombreLocal);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarNombreLocalLoginAsync(string nombreLocal) {
            return base.Channel.comprobarNombreLocalLoginAsync(nombreLocal);
        }
        
        public bool agregarEstado(Entities.DTOs.DTOEstado state) {
            return base.Channel.agregarEstado(state);
        }
        
        public System.Threading.Tasks.Task<bool> agregarEstadoAsync(Entities.DTOs.DTOEstado state) {
            return base.Channel.agregarEstadoAsync(state);
        }
        
        public bool modificarEstado(Entities.DTOs.DTOEstado state) {
            return base.Channel.modificarEstado(state);
        }
        
        public System.Threading.Tasks.Task<bool> modificarEstadoAsync(Entities.DTOs.DTOEstado state) {
            return base.Channel.modificarEstadoAsync(state);
        }
        
        public bool elimarEstado(Entities.DTOs.DTOEstado state) {
            return base.Channel.elimarEstado(state);
        }
        
        public System.Threading.Tasks.Task<bool> elimarEstadoAsync(Entities.DTOs.DTOEstado state) {
            return base.Channel.elimarEstadoAsync(state);
        }
        
        public Entities.DTOs.DTOEstado getEstado(long id) {
            return base.Channel.getEstado(id);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEstado> getEstadoAsync(long id) {
            return base.Channel.getEstadoAsync(id);
        }
        
        public Entities.DTOs.DTOEstado getEstadoPorPedido(long idPedido) {
            return base.Channel.getEstadoPorPedido(idPedido);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEstado> getEstadoPorPedidoAsync(long idPedido) {
            return base.Channel.getEstadoPorPedidoAsync(idPedido);
        }
    }
}
