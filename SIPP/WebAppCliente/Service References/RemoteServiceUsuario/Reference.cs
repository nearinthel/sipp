//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppCliente.RemoteServiceUsuario {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteServiceUsuario.IServiceUsuario")]
    public interface IServiceUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerValoracionesDeEmpresa", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerValoracionesDeEmpresaResponse")]
        Entities.DTOs.DTOValoracion[] obtenerValoracionesDeEmpresa(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerValoracionesDeEmpresa", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerValoracionesDeEmpresaResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOValoracion[]> obtenerValoracionesDeEmpresaAsync(long rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ingresarValoracion", ReplyAction="http://tempuri.org/IServiceUsuario/ingresarValoracionResponse")]
        Entities.DTOs.DTOValoracion ingresarValoracion(Entities.DTOs.DTOValoracion v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ingresarValoracion", ReplyAction="http://tempuri.org/IServiceUsuario/ingresarValoracionResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOValoracion> ingresarValoracionAsync(Entities.DTOs.DTOValoracion v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerEmpresaPorLocal", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerEmpresaPorLocalResponse")]
        Entities.DTOs.DTOEmpresa obtenerEmpresaPorLocal(string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerEmpresaPorLocal", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerEmpresaPorLocalResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOEmpresa> obtenerEmpresaPorLocalAsync(string local);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerPedidosDeUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerPedidosDeUsuarioResponse")]
        Entities.DTOs.DTOPedido[] obtenerPedidosDeUsuario(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/obtenerPedidosDeUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/obtenerPedidosDeUsuarioResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOPedido[]> obtenerPedidosDeUsuarioAsync(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/getUsuarios", ReplyAction="http://tempuri.org/IServiceUsuario/getUsuariosResponse")]
        Entities.DTOs.DTOUsuario[] getUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/getUsuarios", ReplyAction="http://tempuri.org/IServiceUsuario/getUsuariosResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario[]> getUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/registroUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/registroUsuarioResponse")]
        Entities.DTOs.DTOUsuario registroUsuario(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/registroUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/registroUsuarioResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> registroUsuarioAsync(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/loginUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/loginUsuarioResponse")]
        Entities.DTOs.DTOUsuario loginUsuario(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/loginUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/loginUsuarioResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> loginUsuarioAsync(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ObtenerUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/ObtenerUsuarioResponse")]
        Entities.DTOs.DTOUsuario ObtenerUsuario(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ObtenerUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/ObtenerUsuarioResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> ObtenerUsuarioAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/guardarUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/guardarUsuarioResponse")]
        bool guardarUsuario(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/guardarUsuario", ReplyAction="http://tempuri.org/IServiceUsuario/guardarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> guardarUsuarioAsync(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ComprobarEmail", ReplyAction="http://tempuri.org/IServiceUsuario/ComprobarEmailResponse")]
        bool ComprobarEmail(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/ComprobarEmail", ReplyAction="http://tempuri.org/IServiceUsuario/ComprobarEmailResponse")]
        System.Threading.Tasks.Task<bool> ComprobarEmailAsync(Entities.DTOs.DTOUsuario u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/getUbicaciones", ReplyAction="http://tempuri.org/IServiceUsuario/getUbicacionesResponse")]
        Entities.DTOs.DTOUbicacion[] getUbicaciones(long idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/getUbicaciones", ReplyAction="http://tempuri.org/IServiceUsuario/getUbicacionesResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOUbicacion[]> getUbicacionesAsync(long idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/IngresarPedido", ReplyAction="http://tempuri.org/IServiceUsuario/IngresarPedidoResponse")]
        Entities.DTOs.DTOPedido IngresarPedido(Entities.DTOs.DTOPedido p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUsuario/IngresarPedido", ReplyAction="http://tempuri.org/IServiceUsuario/IngresarPedidoResponse")]
        System.Threading.Tasks.Task<Entities.DTOs.DTOPedido> IngresarPedidoAsync(Entities.DTOs.DTOPedido p);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUsuarioChannel : WebAppCliente.RemoteServiceUsuario.IServiceUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUsuarioClient : System.ServiceModel.ClientBase<WebAppCliente.RemoteServiceUsuario.IServiceUsuario>, WebAppCliente.RemoteServiceUsuario.IServiceUsuario {
        
        public ServiceUsuarioClient() {
        }
        
        public ServiceUsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Entities.DTOs.DTOValoracion[] obtenerValoracionesDeEmpresa(long rut) {
            return base.Channel.obtenerValoracionesDeEmpresa(rut);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOValoracion[]> obtenerValoracionesDeEmpresaAsync(long rut) {
            return base.Channel.obtenerValoracionesDeEmpresaAsync(rut);
        }
        
        public Entities.DTOs.DTOValoracion ingresarValoracion(Entities.DTOs.DTOValoracion v) {
            return base.Channel.ingresarValoracion(v);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOValoracion> ingresarValoracionAsync(Entities.DTOs.DTOValoracion v) {
            return base.Channel.ingresarValoracionAsync(v);
        }
        
        public Entities.DTOs.DTOEmpresa obtenerEmpresaPorLocal(string local) {
            return base.Channel.obtenerEmpresaPorLocal(local);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOEmpresa> obtenerEmpresaPorLocalAsync(string local) {
            return base.Channel.obtenerEmpresaPorLocalAsync(local);
        }
        
        public Entities.DTOs.DTOPedido[] obtenerPedidosDeUsuario(Entities.DTOs.DTOUsuario u) {
            return base.Channel.obtenerPedidosDeUsuario(u);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOPedido[]> obtenerPedidosDeUsuarioAsync(Entities.DTOs.DTOUsuario u) {
            return base.Channel.obtenerPedidosDeUsuarioAsync(u);
        }
        
        public Entities.DTOs.DTOUsuario[] getUsuarios() {
            return base.Channel.getUsuarios();
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario[]> getUsuariosAsync() {
            return base.Channel.getUsuariosAsync();
        }
        
        public Entities.DTOs.DTOUsuario registroUsuario(Entities.DTOs.DTOUsuario u) {
            return base.Channel.registroUsuario(u);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> registroUsuarioAsync(Entities.DTOs.DTOUsuario u) {
            return base.Channel.registroUsuarioAsync(u);
        }
        
        public Entities.DTOs.DTOUsuario loginUsuario(Entities.DTOs.DTOUsuario u) {
            return base.Channel.loginUsuario(u);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> loginUsuarioAsync(Entities.DTOs.DTOUsuario u) {
            return base.Channel.loginUsuarioAsync(u);
        }
        
        public Entities.DTOs.DTOUsuario ObtenerUsuario(long id) {
            return base.Channel.ObtenerUsuario(id);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOUsuario> ObtenerUsuarioAsync(long id) {
            return base.Channel.ObtenerUsuarioAsync(id);
        }
        
        public bool guardarUsuario(Entities.DTOs.DTOUsuario u) {
            return base.Channel.guardarUsuario(u);
        }
        
        public System.Threading.Tasks.Task<bool> guardarUsuarioAsync(Entities.DTOs.DTOUsuario u) {
            return base.Channel.guardarUsuarioAsync(u);
        }
        
        public bool ComprobarEmail(Entities.DTOs.DTOUsuario u) {
            return base.Channel.ComprobarEmail(u);
        }
        
        public System.Threading.Tasks.Task<bool> ComprobarEmailAsync(Entities.DTOs.DTOUsuario u) {
            return base.Channel.ComprobarEmailAsync(u);
        }
        
        public Entities.DTOs.DTOUbicacion[] getUbicaciones(long idUsuario) {
            return base.Channel.getUbicaciones(idUsuario);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOUbicacion[]> getUbicacionesAsync(long idUsuario) {
            return base.Channel.getUbicacionesAsync(idUsuario);
        }
        
        public Entities.DTOs.DTOPedido IngresarPedido(Entities.DTOs.DTOPedido p) {
            return base.Channel.IngresarPedido(p);
        }
        
        public System.Threading.Tasks.Task<Entities.DTOs.DTOPedido> IngresarPedidoAsync(Entities.DTOs.DTOPedido p) {
            return base.Channel.IngresarPedidoAsync(p);
        }
    }
}
